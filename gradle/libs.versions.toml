[versions]
agp = "8.9.1"
constraintlayoutCompose = "1.1.1"
coreKtx = "1.17.0"
junit = "4.13.2"
junitVersion = "1.3.0"
espressoCore = "3.7.0"
lifecycleRuntimeKtx = "2.9.4"
activityCompose = "1.11.0"
composeBom = "2025.05.01"
appcompat = "1.7.1"
lottieCompose = "6.4.0"
material = "1.13.0"

accompanistSystemuicontroller = "0.27.0"
coilCompose = "2.7.0"
gson = "2.10.1"
hiltDagger = "2.51.1"
hilt = "1.2.0"
hiltGradlePlugin = "2.51.1"
kotlinGradlePlugin = "2.0.21"
kotlinStdlibJdk7 = "2.0.21"
kotlinxCoroutinesAndroid = "1.8.1"
kotlinxSerializationJson = "1.6.3"
lifecycleExtensions = "2.2.0"
lifecycleViewmodelCompose = "2.8.7"
lifecycleViewmodelKtx = "2.8.7"
navigationCompose = "2.8.9"
okhttp = "5.0.0-alpha.2"
retrofit = "2.10.0"
retrofit2KotlinCoroutinesAdapter = "0.9.2"
ksp = "2.0.21-1.0.27"
serializationGradlePlugin = "2.0.0"
workRuntimeKtx = "2.10.0"
compileSdk = "36"
minSdk = "24"



[libraries]
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
androidx-constraintlayout-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutCompose" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }

lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottieCompose" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "workRuntimeKtx" }


kotlin-stdlib-jdk7 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlinStdlibJdk7" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }
lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleViewmodelKtx" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

# Retrofit
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit2-kotlin-coroutines-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version.ref = "retrofit2KotlinCoroutinesAdapter" }
adapter-rxjava2 = { group = "com.squareup.retrofit2", name = "adapter-rxjava2", version.ref = "retrofit" }

# Hilt
hilt-dagger-android = { module = "com.google.dagger:hilt-android", version.ref = "hiltDagger" }
## Keep the Dagger and Hilt compiler in place; removing it could reintroduce the bug related to injecting SyncWork
hilt-dagger-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltDagger" } # Don't remove
hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt" } # Don't remove
hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt" }

# Compose
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }
compose-animation = { module = "androidx.compose.animation:animation" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-util = { module = "androidx.compose.ui:ui-util" }
compose-material = { module = "androidx.compose.material:material" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-material3 = { module = "androidx.compose.material3:material3" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlinGradlePlugin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlinGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "agp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hiltGradlePlugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "serializationGradlePlugin" }
